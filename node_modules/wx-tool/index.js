/*
 * @Author: lx (前端开发工程师) 
 * @Date: 2018-09-25 13:46:23 
 * @Desc: 常用的工具类函数
 * @Last Modified by: lx (前端开发工程师)
 * @Last Modified time: 2019-04-10 16:10:32
 */

/**
 * 
 * @param {object} obj 
 *  {
 *      title: '提示的内容',
 *      icon: 图标，有效值 'success', 'none',
 *      duration: 提示的延迟时间，单位毫秒，默认：1500,
 *      mask: 是否显示透明蒙层，防止触摸穿透，默认：true
 *  }
 *  返回Promise
 */ 
export function showToast (obj) {
    let {
        title = '', 
        icon = 'success', 
        image, 
        duration = 1500, 
        mask = true
    } = obj || {}
    return new Promise((resolve, reject) => {
        wx.showToast({
            title,
            icon,
            image,
            duration,
            mask,
            success: resolve,
            fail: reject
        })
    })
}

/**
 * 
 * @param {object} obj 
 *  {
 *      title: 提示的标题,
 *      content: 提示的内容,
 *      showCancel: 是否显示取消按钮，默认为 true,
 *      cancelText: 取消按钮的文字，默认为"取消"，最多 4 个字符,
 *      cancelColor: 取消按钮的文字颜色，默认为"#000000",
 *      confirmText: 确定按钮的文字，默认为"确定"，最多 4 个字符,
 *      confirmColor: 确定按钮的文字颜色，默认为"#00aaff",
 *  }
 *  返回Promise
 */ 
export function showModal (obj) {
    let {
        title = '',
        content = '', 
        showCancel = true, 
        cancelText = '取消', 
        cancelColor = '#000000', 
        confirmText = '确定', 
        confirmColor = '#00aaff'
    } = obj || {}
    return new Promise((resolve, reject) => {
        wx.showModal({
            title,
            content,
            showCancel,
            cancelText,
            cancelColor,
            confirmText,
            confirmColor,
            success: resolve,
            fail: reject
        })
    })
}

/**
 * 
 * @param {object} obj 
 *  {
 *      timeStamp: 时间戳，从 1970 年 1 月 1 日 00:00:00 至今的秒数，即当前的时间
 *      nonceStr: 随机字符串，长度为32个字符以下
 *      package: 统一下单接口返回的 prepay_id 参数值，提交格式如：prepay_id=***
 *      signType: 签名算法 默认 MD5
 *      paySign: 签名
 *  }
 *  返回Promise
 */ 
export function requestPayment (obj) {
    let {
        timeStamp,
        nonceStr,
        package: Package,
        signType = 'MD5',
        paySign
    } = obj || {}
    return new Promise((resolve, reject) => {
        wx.requestPayment({
            timeStamp,
            nonceStr,
            package: Package,
            signType,
            paySign,
            success: resolve,
            fail: reject
        })
    })
}


/**
 * 判断两个数组是否相等
 * @param {array} arr1 数组一
 * @param {array} arr2 数组二
 */
export function arrayEqual(arr1, arr2) {
    if (arr1 === arr2) return true
    if (arr1.length != arr2.length) return false
    for (let i = 0; i < arr1.length; ++i) {
        if (arr1[i] !== arr2[i]) return false
    }
    return true
}

/**
 * 判断`obj`是否为空
 * @param {object} obj
 */
export function isEmptyObject(obj) {
    if (!obj || typeof obj !== 'object' || Array.isArray(obj)) return false
    return !Object.keys(obj).length
}

/**
 * 随机生成颜色
 */
export function randomColor() {
    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).slice(-6)
}

/**
 * 生成指定范围随机数
 * @param {number} min
 * @param {number} max
 */
export function randomNum(min, max) {
    return Math.floor(min + Math.random() * (max - min))
}

/**
 * 判断是否为身份证
 * @param {string} str 身份证号
 */
export function isIdCard(str) {
    return /^(^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$)|(^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])((\d{4})|\d{3}[Xx])$)$/.test(str)
}

/**
 * 银行卡每四位+空格
 * @param {string} s 银行卡号
 */
export function bankSpace (s) {
    if (/^[\d]{0,19}$/.test(s.replace(/\s/g, ''))) {
        //每四位数字加一个空格
        s = s.replace(/\D/g, '').replace(/(....)(?=.)/g, '$1 ')
    }
    return s
}

/**
 * 检测是否是新版本
 */
export function isNew () {
    // 检测版本
    const updateManager = wx.getUpdateManager()
    updateManager.onUpdateReady( async () =>{
        let {
            confirm
        } = await showModal({
            title: '更新提示',
            content: '新版本已经准备好，是否重启应用？',
        })
        if (confirm) {
            updateManager.applyUpdate()
        }
    })  
}

/**
 * 获取小程序启动时的参数。与 App.onLaunch 的回调参数一致
 * 部分版本在无referrerInfo的时候会返回 undefined，建议使用 options.referrerInfo && options.referrerInfo.appId 进行判断。
 */
export function getOptionsSync () {
    return wx.getLaunchOptionsSync() 
}

/**
 * 检测数字
 * @param {string} s 所选数字
 */
export function isNum (s) {
    return /^[0-9]*$/.test(s) 
}


/**
 * 检测该手机号是否正确
 * @param {string} s 所选手机号 
 */
export function isPhone (s) {
    return /^[1][3,4,5,6,7,8,9][0-9]{9}$/.test(s)  
}

/**
 * 检测该邮箱是否正确
 * @param {string} s 所选邮箱
 */
export function isMail (s) {
    return /^([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+\.[a-zA-Z]{2,3}$/.test(s) 
}

/**
 * 合法uri
 * @param {string} s 传入url
 */
export function validateURL(s) {
    const urlregex = /^(https?|ftp):\/\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\.)*[a-zA-Z0-9-]+\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\/($|[a-zA-Z0-9.,?'\\+&%$#=~_-]+))*$/
    return urlregex.test(s)
}

/**
 * 是否小写字母
 * @param {string} s 传入字符串
 */
export function validateLowerCase(s) {
    const reg = /^[a-z]+$/
    return reg.test(s)
}

/**
 * 是否大写字母
 * @param {string} s 传入字符串
 */
export function validateUpperCase(s) {
    const reg = /^[A-Z]+$/
    return reg.test(s)
}

/**
 * 是否大小写字母
 * @param {string} s 传入字符串
 */
export function validatAlphabets(s) {
    const reg = /^[A-Za-z]+$/
    return reg.test(s)
}

/**
 * 检测该车牌号是否正确
 * @param {string} s 所选车牌号
 */
export function isPlate (s) {
    const reg = /([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}(([0-9]{5}[DF])|([DF]([A-HJ-NP-Z0-9])[0-9]{4})))|([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳]{1})/
    return reg.test(s) 
}

/**
 * 去除两端空格
 * @param {string} s 所选字符串
 */
export function trim (s) {
　  return s.replace(/(^\s*)|(\s*$)/g, "")
}

/**
 * 防抖
 * @param {function} fn 函数
 * @param {number} delay 时间
 */
export function debounce(fn, delay = 500) {
    let timer = null
    return function () {
        let _self = this
        let args = [].slice.call(arguments)
        clearTimeout(timer)
        timer = setTimeout(function () {
            fn.apply(_self, args)
        }, delay)
    }
}

/**
 * 节流
 * @param {function} fn 函数
 * @param {number} wait 时间
 */
export function throttle(fn, wait = 500) {
    let lastTime = 0 // 初始化上一次调用的事件
    return function () {
    	let args = [].slice.call(arguments) // 将类数组转化为数组
        let nowTime = new Date().getTime() // 获取当前时间
        if(nowTime - lastTime > wait) { 
            fn.apply(this, args)
            lastTime = nowTime // 把上一次调用时间重新赋值
        }
    }
}

/**
 * 分时
 * @param {array} data 数组
 * @param {function} fn 函数
 * @param {number} count 时间
 * @param {number} delay 时间
 */
export function timeChunk(data, fn, count = 20, delay = 200) {
    let timer
    function start() {
        for(let i = 0; i < Math.min(count, data.length); i++) {
            let obj = data.shift()
            fn(obj)
        }
    }
    return function () {
        timer = setInterval(function () {
            if(data.length === 0) {
                return clearInterval(timer)
            }
            start()
        }, delay)
    }
}

/**
 *  现金额转大写
 * @param {number} n
 */
export function digitUppercase(n) {
    var fraction = ['角', '分']
    var digit = [
        '零', '壹', '贰', '叁', '肆',
        '伍', '陆', '柒', '捌', '玖'
    ]
    var unit = [
        ['元', '万', '亿'],
        ['', '拾', '佰', '仟']
    ]
    var head = n < 0 ? '欠' : ''
    n = Math.abs(n)
    var s = ''
    for (var i = 0; i < fraction.length; i++) {
        s += (digit[Math.floor(n * 10 * Math.pow(10, i)) % 10] + fraction[i]).replace(/零./, '')
    }
    s = s || '整'
    n = Math.floor(n)
    for (var i = 0; i < unit[0].length && n > 0; i++) {
        var p = ''
        for (var j = 0; j < unit[1].length && n > 0; j++) {
            p = digit[n % 10] + unit[1][j] + p
            n = Math.floor(n / 10)
        }
        s = p.replace(/(零.)*零$/, '').replace(/^$/, '零') + unit[0][i] + s
    }
    return head + s.replace(/(零.)*零元/, '元')
        .replace(/(零.)+/g, '零')
        .replace(/^整$/, '零元整')
}

/**
 * 浮点数相加
*/
export function decimalAdd(num1, num2) {  
    //第一个参数的小数个数
    let decimalLen1 = (num1.toString().split('.')[1] || '').length
    //第二个参数的小数个数
    let decimalLen2 = (num2.toString().split('.')[1] || '').length
    let baseNum = Math.pow(10, Math.max(decimalLen1, decimalLen2))
    return (num1 * baseNum + num2 * baseNum) / baseNum
}

/**
 * 计算经纬度两点的距离
 * @param {string} start 开始经纬度 23.099579542217775,113.24026330500826
 * @param {string} end 结束经纬度   23.099579542217775,113.24026330500826
 */
export function getDistance(start, end) {
    let lon1 = (Math.PI / 180) * start[1];
    let lon2 = (Math.PI / 180) * end[1];
    let lat1 = (Math.PI / 180) * start[0];
    let lat2 = (Math.PI / 180) * end[0];
    // 地球半径
    let R = 6371;
    // 两点间距离 km，如果想要米的话，结果*1000就可以了
    let d = Math.acos(Math.sin(lat1) * Math.sin(lat2) + Math.cos(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1)) *
        R;
    return d * 1000;
}

/**
 * 返回一个v4兼容的UUID.
 * @returns {string}
 */
export function uuid() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c)=> {
        const r = (Math.random() * 16) | 0,
            v = c === 'x' ? r : (r & 0x3) | 0x8;
        return v.toString(16);
    });
}

// 颜色表
const COLORS = [
    '#e21400',
    '#91580f',
    '#f8a700',
    '#f78b00',
    '#58dc00',
    '#287b00',
    '#a8f07a',
    '#4ae8c4',
    '#3b88eb',
    '#3824aa',
    '#a700ff',
    '#d300e7',
  ]

/**
 * 通过哈希函数获取用户名的颜色
 * @param {string} username
 */
export function getUsernameColor(username, color = COLORS) {
    // 计算哈希码
    let hash = 7
    for (var i = 0, len = username.length; i < len; i++) {
        hash = username.charCodeAt(i) + (hash << 5) - hash
    }
    // 计算颜色
    let index = Math.abs(hash % color.length)
    return color[index]
}

/**
 * 检测该字符串是否为空
 * @param {string} s 所选的字符串
 * @param {number} l 所需的长度
 */
export function isLength (s, l) {
　  if (s.length < l) {
        return false
    } else {  
        return true
    } 
}

/**
 * 把秒转为 时分秒
 * @param {string} value 秒
 */
export function formatSeconds(value) {
    let secondTime = parseInt(value),// 秒
        minuteTime = 0,// 分
        hourTime = 0// 小时
    if(secondTime > 60) {//如果秒数大于60，将秒数转换成整数
        //获取分钟，除以60取整数，得到整数分钟
        minuteTime = parseInt(secondTime / 60)
        //获取秒数，秒数取佘，得到整数秒数
        secondTime = parseInt(secondTime % 60)
        //如果分钟大于60，将分钟转换成小时
        if(minuteTime > 60) {
            //获取小时，获取分钟除以60，得到整数小时
            hourTime = parseInt(minuteTime / 60)
            //获取小时后取佘的分，获取分钟除以60取佘的分
            minuteTime = parseInt(minuteTime % 60)
        }
    }
    let result = "" + parseInt(secondTime) + "秒"
    if(minuteTime > 0) {
        result = "" + parseInt(minuteTime) + "分" + result
    }
    if(hourTime > 0) {
        result = "" + parseInt(hourTime) + "小时" + result
    }
    return result
}

/**
 * 格式化时间
 * @param {date} time 时间
 * @param {string} cFormat {y}-{m}-{d} {h}:{i}:{s} {a} 
 */
export function parseTime(time, cFormat) {
    if (arguments.length === 0) {
        return null
    }
    const format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}'
    let date
    if (typeof time === 'object') {
        
    } else {
        if (('' + time).length === 10) time = parseInt(time) * 1000
        date = new Date(time)
    }
    const formatObj = {
        y: date.getFullYear(),
        m: date.getMonth() + 1,
        d: date.getDate(),
        h: date.getHours(),
        i: date.getMinutes(),
        s: date.getSeconds(),
        a: date.getDay()
    }
    const time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) => {
        let value = formatObj[key]
        if (key === 'a') return ['一', '二', '三', '四', '五', '六', '日'][value - 1]
        if (result.length > 0 && value < 10) {
            value = '0' + value
        }
        return value || 0
    })
    return time_str
}

/**
 *  返回目标时间距离当前时间时长
 * @param {date} time 时间
 * @param {string} option 格式化时间
 */
export function formatTime(time, option) {
    time = +time * 1000
    const d = new Date(time)
    const now = Date.now()
    const diff = (now - d) / 1000
    if (diff < 30) {
        return '刚刚'
    } else if (diff < 3600) { // less 1 hour
        return Math.ceil(diff / 60) + '分钟前'
    }   else if (diff < 3600 * 24) {
        return Math.ceil(diff / 3600) + '小时前'
    } else if (diff < 3600 * 24 * 2) {
        return '1天前'
    }
    if (option) {
        return parseTime(time, option)
    } else {
        return d.getMonth() + 1 + '月' + d.getDate() + '日' + d.getHours() + '时' + d.getMinutes() + '分'
    }
}

/**
 * 对象序列化
 * @param {object} obj 
 */
export function stringfyQueryString(obj) {
    if (!obj) return ''
    var pairs = []
    for (var key in obj) {
        var value = obj[key]
        if (value instanceof Array) {
            for (var i = 0; i < value.length; ++i) {
                pairs.push(encodeURIComponent(key + '[' + i + ']') + '=' + encodeURIComponent(value[i]))
            }
            continue
        }
        pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]))
    }
    return pairs.join('&')
}

/**
 * 该页面是否可以返回上一页
 */
export function isBack () {
    return getCurrentPages().length !== 1
}

/**
 * 成功后返回上一页
 * @param {string} title 文字
 * @param {number} time 毫秒数
 */
export function successBack(title = '支付成功', time = 1500) {
    showToast({
        title,
        icon: 'success'
    })
    setTimeout(() => {
        wx.navigateBack()
    }, time)
}

/**
 * 获取url参数
 * @param {string} location url
 * @param {string} key 所需要的key
 */
export function getQueryString(location,key = null) {
    // 用?分割成，使用&符号得到每一个key=val
    let tempArr = null,
    searchObj = {}
    // 遍历数组中的每一个key=val字符串，使用=号劈开，
    // 然后以key为名，val为值添加到searchObj对象中。
    for (let i of location.split('?')[1].split('&')) {
        tempArr = i.split('=')
        searchObj[tempArr[0]] = tempArr[1]
    }
    // 有参数返回指定值，没有参数返回全部值
    return key ? searchObj[key] : searchObj
}

/**
 * 百度地图经纬度转腾讯地图经纬度
 * @param {number} lng 
 * @param {number} lat 
 */
export function bMapTransQQMap(lng,lat){
    let x_pi = 3.14159265358979324 * 3000.0 / 180.0
    let x = lng - 0.0065
    let y = lat - 0.006
    let z = Math.sqrt(x * x + y * y) - 0.00002 * Math.sin(y * x_pi)
    let theta = Math.atan2(y, x) - 0.000003 * Math.cos(x * x_pi)
    let lngs = z * Math.cos(theta)
    let lats = z * Math.sin(theta)
    return {
        lng: lngs,
        lat: lats
    }
 }

/**
 * 腾讯地图经纬度转百度地图经纬度
 * @param {number} lng 
 * @param {number} lat 
 */
export function qqMapTransBMap(lng,lat){
    let x_pi = 3.14159265358979324 * 3000.0 / 180.0
    let x = lng
    let y = lat
    let z = Math.sqrt(x * x + y * y) + 0.00002 * Math.sin(y * x_pi)
    let theta = Math.atan2(y, x) + 0.000003 * Math.cos(x * x_pi)
    let lngs = z * Math.cos(theta) + 0.0065
    let lats = z * Math.sin(theta) + 0.006
    return {
        lng: lngs,
        lat: lats
    }
}


/** 
 * 读取本地文件内容
 * @param {number} filePath 要读取的文件的路径
 * @param {string} encoding 指定读取文件的字符编码，如果不传 encoding，则以 ArrayBuffer 格式读取文件的二进制内容 ascii / base64 / binary / hex / (ucs2/ucs-2/utf16le/utf-16le) / utf-8/utf8 / latin1
 */
export function localEncoding(filePath, encoding = 'base64') {
    return new Promise((resolve, reject) => {
        wx.getFileSystemManager().readFile({
            filePath,
            encoding,
            success: ({data})=> resolve(data),
            fail: reject
        })
    })
}

/**
 * 云函数调用
 * @param {string} name 云函数名字
 * @param {string} data 传输的数据
 */
export function cloudFn(name, data) {
    return new Promise(async (resolve, reject) => {
        try {
            wx.showLoading({
                title: 'Loading...', //提示的内容,
                mask: true, //显示透明蒙层，防止触摸穿透,
            })
            let {
                result
            } = await wx.cloud.callFunction({
                name,
                data
            })
            if(result.code > 0) throw result
            resolve(result)
        } catch (error) {
            console.log(error)
            reject(error)
        } finally {
            wx.hideLoading()
        }
    })
}

/**
 * 云数据库调用
 * @param {string} type 类型
 * @param {string} name 云函数名字
 * @param {string} data 传输的数据
 */
export function cloudDataBase({
    type,
    name,
    data = {},
}) {
    if(type != 'doc') {
        return wx.cloud.database().collection(name)[type]({data})
    } else {
        return wx.cloud.database().collection(name)[type](data)
    }
}

/** 
 * 云函数微信支付
 * @param {number} fee 标价金额  订单总金额，单位为分
 * @param {string} attach 附加数据 例如:深圳分店
 * @param {string} body 商品描述  128字节  例如:腾讯充值中心-QQ会员充值
 */
export function cloudGetPay({
    fee, 
    attach, 
    body
}) {
    return new Promise( async(resolve, reject) => {
        try {
            let {
                data: {
                    appid: appId,
                    timeStamp,
                    nonce_str: nonceStr,
                    prepay_id,
                    paySign,
                    signType
                }
            } = await cloudFn('getPay',{
                    total_fee: parseFloat(fee).toFixed(2) * 100,
                    attach,
                    body
                })
            let result = await requestPayment({
                appId,
                timeStamp,
                nonceStr,
                package: `prepay_id=${prepay_id}`,
                signType,
                paySign
            })
            resolve({
                result,
                prepay_id
            })
        } catch (error) {
            reject(error)
        }
    })
}



/**
 * 控制台输出
 */
export function log() {
    var Contributors
    Contributors = {
        shuffle(o) { //v1.0
            for (var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x)
            return o
        },
        people: [{
            name: "Sea(lxx_ljl@163.com)",
            url: "https://sea123.cc",
            avatar: "https://wx2.sinaimg.cn/thumb300/704a2b51gy1fgssok9omoj2050050t8q.jpg"
        }]
    }
    if (console && console.log) {
        Contributors.shuffle(Contributors.people)
        console.clear()
        console.log("%c代码应尽量简洁易懂。总想写出晦涩难懂的代码,那是“菜鸟”的思维", "font-size: 18px; font-weight: bold")
        console.log("")
        console.log("%cSpecial Thanks", "font-size: 18px; font-weight: bold")
        console.log("")
        for (var i in Contributors.people) {
            console.log("%c" + Contributors.people[i].name, "font-size: 18px;")
            console.log("%cUrl: " + Contributors.people[i].url, "font-size: 14px; color: #666")
            console.log("%c", "background:url(" + Contributors.people[i].avatar + ") no-repeat; line-height:180px; padding: 85px 85px; -webkit-background-size: 100% 100%; background-size: 100% 100%; width: 180px; height: 180px;")
            console.log("")
        }
        console.log("And you.")
    }
}

/** 
 * 提取中文首字母
 * @param {string} str 中文字符串
 * @param {string} type 大小写 默认大写
 */
export function makePy(str, type = 1){
    if(typeof(str) != "string"){
        return str;
        //throw new Error(-1,"需要字符串类型参数!");
    }
    var arrResult = new Array()
    for(var i = 0,len = str.length;i < len; i++){
        var ch = str.charAt(i)
        arrResult.push(checkCh(ch))
    }
     var resarr = mkRslt(arrResult)
    if(type == 1) {
        return resarr.join("")
    } else {
        return resarr.join("").toLowerCase()
    }
}
function checkCh(ch){
    var uni = ch.charCodeAt(0)
    if(uni > 40869 || uni < 19968)
    return ch //dealWithOthers(ch)
    return (oMultiDiff[uni]?oMultiDiff[uni]:(strChineseFirstPY.charAt(uni-19968)))
}
function mkRslt(arr){
    var arrRslt = [""]
    for(var i=0,len=arr.length;i<len;i++){
        var str = arr[i]
        var strlen = str.length
        if(strlen == 1){
            for(var k=0;k<arrRslt.length;k++){
                arrRslt[k] += str
            }
        }else{
            var tmpArr = arrRslt.slice(0)
            arrRslt = []
            for(k=0;k<strlen;k++){
                var tmp = tmpArr.slice(0)
                for(var j=0;j<tmp.length;j++){
                    tmp[j] += str.charAt(k)
                }
                arrRslt = arrRslt.concat(tmp)
            }
        }
    }
    return arrRslt;
}
var strChineseFirstPY = "";
var oMultiDiff={"19969":"DZ","19975":"WM","19988":"QJ","20048":"YL","20056":"SC","20060":"NM","20094":"QG","20127":"QJ","20167":"QC","20193":"YG","20250":"KH","20256":"ZC","20282":"SC","20285":"QJG","20291":"TD","20314":"YD","20340":"NE","20375":"TD","20389":"YJ","20391":"CZ","20415":"PB","20446":"YS","20447":"SQ","20504":"TC","20608":"KG","20854":"QJ","20857":"ZC","20911":"PF","20504":"TC","20608":"KG","20854":"QJ","20857":"ZC","20911":"PF","20985":"AW","21032":"PB","21048":"XQ","21049":"SC","21089":"YS","21119":"JC","21242":"SB","21273":"SC","21305":"YP","21306":"QO","21330":"ZC","21333":"SDC","21345":"QK","21378":"CA","21397":"SC","21414":"XS","21442":"SC","21477":"JG","21480":"TD","21484":"ZS","21494":"YX","21505":"YX","21512":"HG","21523":"XH","21537":"PB","21542":"PF","21549":"KH","21571":"E","21574":"DA","21588":"TD","21589":"O","21618":"ZC","21621":"KHA","21632":"ZJ","21654":"KG","21679":"LKG","21683":"KH","21710":"A","21719":"YH","21734":"WOE","21769":"A","21780":"WN","21804":"XH","21834":"A","21899":"ZD","21903":"RN","21908":"WO","21939":"ZC","21956":"SA","21964":"YA","21970":"TD","22003":"A","22031":"JG","22040":"XS","22060":"ZC","22066":"ZC","22079":"MH","22129":"XJ","22179":"XA","22237":"NJ","22244":"TD","22280":"JQ","22300":"YH","22313":"XW","22331":"YQ","22343":"YJ","22351":"PH","22395":"DC","22412":"TD","22484":"PB","22500":"PB","22534":"ZD","22549":"DH","22561":"PB","22612":"TD","22771":"KQ","22831":"HB","22841":"JG","22855":"QJ","22865":"XQ","23013":"ML","23081":"WM","23487":"SX","23558":"QJ","23561":"YW","23586":"YW","23614":"YW","23615":"SN","23631":"PB","23646":"ZS","23663":"ZT","23673":"YG","23762":"TD","23769":"ZS","23780":"QJ","23884":"QK","24055":"XH","24113":"DC","24162":"ZC","24191":"GA","24273":"QJ","24324":"NL","24377":"TD","24378":"QJ","24439":"PF","24554":"ZS","24683":"TD","24694":"WE","24733":"LK","24925":"TN","25094":"ZG","25100":"XQ","25103":"XH","25153":"PB","25170":"PB","25179":"KG","25203":"PB","25240":"ZS","25282":"FB","25303":"NA","25324":"KG","25341":"ZY","25373":"WZ","25375":"XJ","25384":"A","25457":"A","25528":"SD","25530":"SC","25552":"TD","25774":"ZC","25874":"ZC","26044":"YW","26080":"WM","26292":"PB","26333":"PB","26355":"ZY","26366":"CZ","26397":"ZC","26399":"QJ","26415":"ZS","26451":"SB","26526":"ZC","26552":"JG","26561":"TD","26588":"JG","26597":"CZ","26629":"ZS","26638":"YL","26646":"XQ","26653":"KG","26657":"XJ","26727":"HG","26894":"ZC","26937":"ZS","26946":"ZC","26999":"KJ","27099":"KJ","27449":"YQ","27481":"XS","27542":"ZS","27663":"ZS","27748":"TS","27784":"SC","27788":"ZD","27795":"TD","27812":"O","27850":"PB","27852":"MB","27895":"SL","27898":"PL","27973":"QJ","27981":"KH","27986":"HX","27994":"XJ","28044":"YC","28065":"WG","28177":"SM","28267":"QJ","28291":"KH","28337":"ZQ","28463":"TL","28548":"DC","28601":"TD","28689":"PB","28805":"JG","28820":"QG","28846":"PB","28952":"TD","28975":"ZC","29100":"A","29325":"QJ","29575":"SL","29602":"FB","30010":"TD","30044":"CX","30058":"PF","30091":"YSP","30111":"YN","30229":"XJ","30427":"SC","30465":"SX","30631":"YQ","30655":"QJ","30684":"QJG","30707":"SD","30729":"XH","30796":"LG","30917":"PB","31074":"NM","31085":"JZ","31109":"SC","31181":"ZC","31192":"MLB","31293":"JQ","31400":"YX","31584":"YJ","31896":"ZN","31909":"ZY","31995":"XJ","32321":"PF","32327":"ZY","32418":"HG","32420":"XQ","32421":"HG","32438":"LG","32473":"GJ","32488":"TD","32521":"QJ","32527":"PB","32562":"ZSQ","32564":"JZ","32735":"ZD","32793":"PB","33071":"PF","33098":"XL","33100":"YA","33152":"PB","33261":"CX","33324":"BP","33333":"TD","33406":"YA","33426":"WM","33432":"PB","33445":"JG","33486":"ZN","33493":"TS","33507":"QJ","33540":"QJ","33544":"ZC","33564":"XQ","33617":"YT","33632":"QJ","33636":"XH","33637":"YX","33694":"WG","33705":"PF","33728":"YW","33882":"SR","34067":"WM","34074":"YW","34121":"QJ","34255":"ZC","34259":"XL","34425":"JH","34430":"XH","34485":"KH","34503":"YS","34532":"HG","34552":"XS","34558":"YE","34593":"ZL","34660":"YQ","34892":"XH","34928":"SC","34999":"QJ","35048":"PB","35059":"SC","35098":"ZC","35203":"TQ","35265":"JX","35299":"JX","35782":"SZ","35828":"YS","35830":"E","35843":"TD","35895":"YG","35977":"MH","36158":"JG","36228":"QJ","36426":"XQ","36466":"DC","36710":"JC","36711":"ZYG","36767":"PB","36866":"SK","36951":"YW","37034":"YX","37063":"XH","37218":"ZC","37325":"ZC","38063":"PB","38079":"TD","38085":"QY","38107":"DC","38116":"TD","38123":"YD","38224":"HG","38241":"XTC","38271":"ZC","38415":"YE","38426":"KH","38461":"YD","38463":"AE","38466":"PB","38477":"XJ","38518":"YT","38551":"WK","38585":"ZC","38704":"XS","38739":"LJ","38761":"GJ","38808":"SQ","39048":"JG","39049":"XJ","39052":"HG","39076":"CZ","39271":"XT","39534":"TD","39552":"TD","39584":"PB","39647":"SB","39730":"LG","39748":"TPB","40109":"ZQ","40479":"ND","40516":"HG","40536":"HG","40583":"QJ","40765":"YQ","40784":"QJ","40840":"YK","40863":"QJG"};
